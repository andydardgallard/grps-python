# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import crud_pb2 as crud__pb2


class ConfigMngmntStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfig = channel.unary_unary(
                '/api.ConfigMngmnt/GetConfig',
                request_serializer=crud__pb2.getRequest.SerializeToString,
                response_deserializer=crud__pb2.getResponse.FromString,
                )
        self.CreateConfig = channel.unary_unary(
                '/api.ConfigMngmnt/CreateConfig',
                request_serializer=crud__pb2.createRequest.SerializeToString,
                response_deserializer=crud__pb2.createResponse.FromString,
                )
        self.UpdateConfig = channel.unary_unary(
                '/api.ConfigMngmnt/UpdateConfig',
                request_serializer=crud__pb2.updateRequest.SerializeToString,
                response_deserializer=crud__pb2.updateResponse.FromString,
                )
        self.DeleteConfig = channel.unary_unary(
                '/api.ConfigMngmnt/DeleteConfig',
                request_serializer=crud__pb2.deleteRequest.SerializeToString,
                response_deserializer=crud__pb2.deleteResponse.FromString,
                )


class ConfigMngmntServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfigMngmntServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=crud__pb2.getRequest.FromString,
                    response_serializer=crud__pb2.getResponse.SerializeToString,
            ),
            'CreateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConfig,
                    request_deserializer=crud__pb2.createRequest.FromString,
                    response_serializer=crud__pb2.createResponse.SerializeToString,
            ),
            'UpdateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConfig,
                    request_deserializer=crud__pb2.updateRequest.FromString,
                    response_serializer=crud__pb2.updateResponse.SerializeToString,
            ),
            'DeleteConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConfig,
                    request_deserializer=crud__pb2.deleteRequest.FromString,
                    response_serializer=crud__pb2.deleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.ConfigMngmnt', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConfigMngmnt(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ConfigMngmnt/GetConfig',
            crud__pb2.getRequest.SerializeToString,
            crud__pb2.getResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ConfigMngmnt/CreateConfig',
            crud__pb2.createRequest.SerializeToString,
            crud__pb2.createResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ConfigMngmnt/UpdateConfig',
            crud__pb2.updateRequest.SerializeToString,
            crud__pb2.updateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ConfigMngmnt/DeleteConfig',
            crud__pb2.deleteRequest.SerializeToString,
            crud__pb2.deleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
